__author__ = 'ZGolgooni'

import numpy as np


def load_smaller_train():
    train = np.array([ 3,   5,   7,  10,  11,  14,  18,  22,  23,  24,  25,  30,  34,
        37,  38,  40,  43,  45,  47,  48,  49,  55,  59,  60,  63,  66,
        70,  72,  74,  79,  82,  83,  84,  89,  90,  91,  92,  96,  97,
        98, 100, 103, 105, 110, 111, 114, 120, 122, 123, 124, 125, 129,
       132, 134, 135, 138, 139, 143, 144, 145, 155, 156, 157, 158, 159,
       160, 164, 165, 170, 172, 173, 174, 176, 184, 185, 188, 189, 190,
       192, 193, 195, 198, 199, 202, 203, 205, 207, 211, 216, 218, 219,
       221, 223, 224, 227, 228, 231, 237, 242, 243, 244, 247, 249, 251,
       252, 253, 254, 256, 257, 258, 263, 264, 266, 270, 274, 275, 280,
       281, 283, 285, 286, 287, 292, 297, 303, 304, 306, 307, 310, 311,
       315, 322, 324, 327, 331, 332, 338, 341, 342, 343, 345, 348, 350,
       352, 353, 357, 360, 361, 362, 367, 369, 373, 376])
    return train


def load_test():
    test = np.array([ 50, 268,  41,  54, 113,  52, 271, 358, 267, 142, 320, 236, 148,
       321, 146,  86, 147, 368,  26,  88,  62, 178, 356, 318, 210,  93,
       355, 317, 334,  71, 180,  94, 308, 255, 107, 248, 126, 151, 133,
       261, 136, 182, 108,  32,   2,  58,  99, 194, 277,   0, 127,   8,
       276,  65, 359, 206, 214, 186, 344, 309, 279,  19,  69, 295, 220,
        73,  81, 305, 201, 154, 222, 116, 226, 234,  31, 302, 233])
    return test


def load_train():
    train = np.array([1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379])
    return train


def load_fractions():
    train_fractions = []
    validation_fractions = []
    #part1
    train_fractions.append(np.array([  3,   4,   5,   6,   9,  10,  11,  12,  13,  14,  15,  16,  17,
        20,  21,  22,  23,  24,  25,  28,  29,  30,  34,  35,  36,  37,
        39,  40,  42,  43,  44,  46,  48,  49,  51,  53,  55,  56,  57,
        61,  63,  64,  66,  68,  72,  75,  76,  77,  78,  79,  80,  82,
        83,  84,  85,  87,  89,  90,  91,  92,  95,  96,  97,  98, 100,
       101, 102, 103, 104, 105, 106, 109, 111, 112, 114, 117, 118, 119,
       120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 134, 139, 140,
       141, 143, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 160,
       161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175,
       176, 177, 179, 181, 183, 184, 188, 189, 190, 192, 193, 195, 196,
       197, 198, 199, 200, 202, 204, 207, 209, 213, 215, 217, 218, 219,
       223, 224, 225, 227, 228, 229, 230, 232, 235, 237, 238, 240, 241,
       242, 243, 245, 246, 247, 249, 253, 254, 256, 257, 258, 259, 262,
       263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 280, 281, 283,
       284, 285, 286, 288, 290, 291, 293, 294, 296, 297, 298, 299, 303,
       304, 306, 310, 311, 312, 313, 314, 316, 319, 323, 324, 325, 326,
       328, 329, 330, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343,
       345, 348, 350, 351, 352, 353, 354, 357, 360, 361, 364, 366, 367,
       369, 370, 371, 372, 374, 375, 376, 378, 379]))
    validation_fractions.append(np.array([  1,   7,  18,  27,  33,  38,  45,  47,  59,  60,  67,  70,  74,
       110, 115, 123, 135, 137, 138, 158, 162, 168, 185, 187, 191, 203,
       205, 208, 211, 212, 216, 221, 231, 239, 244, 250, 251, 252, 260,
       278, 282, 287, 289, 292, 300, 301, 307, 315, 322, 327, 331, 335,
       346, 347, 349, 362, 363, 365, 373, 377]))

    #part 2
    train_fractions.append(np.array([  1,   4,   5,   6,   7,   9,  11,  12,  13,  14,  15,  17,  18,
        21,  22,  25,  27,  28,  29,  30,  33,  34,  35,  36,  37,  38,
        39,  42,  43,  44,  45,  47,  48,  51,  59,  60,  64,  66,  67,
        70,  72,  74,  75,  76,  78,  79,  82,  84,  87,  89,  90,  91,
        92,  95,  96,  97, 100, 101, 103, 105, 106, 109, 110, 112, 114,
       115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130,
       131, 132, 135, 137, 138, 139, 140, 141, 143, 144, 152, 153, 155,
       156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173,
       174, 175, 176, 177, 179, 181, 183, 184, 185, 187, 189, 190, 191,
       192, 193, 195, 196, 198, 199, 200, 202, 203, 204, 205, 208, 209,
       211, 212, 215, 216, 218, 221, 225, 227, 228, 229, 230, 231, 232,
       235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251,
       252, 253, 254, 256, 257, 260, 262, 263, 264, 265, 266, 270, 272,
       273, 274, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290,
       291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 307, 310,
       311, 312, 313, 314, 315, 316, 319, 322, 323, 324, 325, 326, 327,
       328, 329, 330, 331, 335, 337, 339, 340, 341, 342, 345, 346, 347,
       348, 349, 350, 351, 352, 353, 354, 360, 361, 362, 363, 365, 366,
       369, 370, 372, 373, 374, 375, 376, 377, 378]))
    validation_fractions.append(np.array([  3,  10,  16,  20,  23,  24,  40,  46,  49,  53,  55,  56,  57,
        61,  63,  68,  77,  80,  83,  85,  98, 102, 104, 111, 134, 145,
       149, 150, 157, 169, 170, 171, 172, 188, 197, 207, 213, 217, 219,
       223, 224, 237, 249, 258, 259, 269, 275, 284, 304, 306, 332, 333,
       336, 338, 343, 357, 364, 367, 371, 379]))

    #part 3
    train_fractions.append(np.array([  1,   3,   5,   6,   7,  10,  11,  13,  14,  15,  16,  17,  18,
        20,  22,  23,  24,  25,  27,  28,  29,  30,  33,  35,  36,  37,
        38,  39,  40,  42,  44,  45,  46,  47,  48,  49,  51,  53,  55,
        56,  57,  59,  60,  61,  63,  66,  67,  68,  70,  72,  74,  75,
        76,  77,  79,  80,  82,  83,  84,  85,  87,  89,  90,  91,  97,
        98, 102, 103, 104, 106, 109, 110, 111, 114, 115, 118, 120, 121,
       122, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 143, 145,
       149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164,
       166, 168, 169, 170, 171, 172, 175, 176, 177, 181, 184, 185, 187,
       188, 189, 191, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205,
       207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224,
       227, 228, 229, 230, 231, 232, 235, 237, 239, 241, 242, 243, 244,
       246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260,
       262, 265, 266, 269, 270, 273, 274, 275, 278, 280, 281, 282, 284,
       286, 287, 289, 292, 294, 297, 300, 301, 304, 306, 307, 311, 312,
       313, 314, 315, 316, 319, 322, 325, 326, 327, 329, 330, 331, 332,
       333, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 351,
       352, 353, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369,
       370, 371, 372, 373, 374, 376, 377, 378, 379]))
    validation_fractions.append(np.array([  4,   9,  12,  21,  34,  43,  64,  78,  92,  95,  96, 100, 101,
       105, 112, 117, 119, 124, 125, 130, 131, 132, 144, 156, 165, 167,
       173, 174, 179, 183, 190, 196, 200, 209, 225, 238, 240, 245, 263,
       264, 272, 283, 285, 288, 290, 291, 293, 296, 298, 299, 303, 310,
       323, 324, 328, 337, 342, 348, 350, 375]))

    #part 4
    train_fractions.append(np.array([  1,   3,   5,   6,   7,  10,  11,  13,  14,  15,  16,  17,  18,
        20,  22,  23,  24,  25,  27,  28,  29,  30,  33,  35,  36,  37,
        38,  39,  40,  42,  44,  45,  46,  47,  48,  49,  51,  53,  55,
        56,  57,  59,  60,  61,  63,  66,  67,  68,  70,  72,  74,  75,
        76,  77,  79,  80,  82,  83,  84,  85,  87,  89,  90,  91,  97,
        98, 102, 103, 104, 106, 109, 110, 111, 114, 115, 118, 120, 121,
       122, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 143, 145,
       149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164,
       166, 168, 169, 170, 171, 172, 175, 176, 177, 181, 184, 185, 187,
       188, 189, 191, 192, 193, 195, 197, 198, 199, 202, 203, 204, 205,
       207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224,
       227, 228, 229, 230, 231, 232, 235, 237, 239, 241, 242, 243, 244,
       246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260,
       262, 265, 266, 269, 270, 273, 274, 275, 278, 280, 281, 282, 284,
       286, 287, 289, 292, 294, 297, 300, 301, 304, 306, 307, 311, 312,
       313, 314, 315, 316, 319, 322, 325, 326, 327, 329, 330, 331, 332,
       333, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 349, 351,
       352, 353, 354, 357, 360, 361, 362, 363, 364, 365, 366, 367, 369,
       370, 371, 372, 373, 374, 376, 377, 378, 379]))
    validation_fractions.append(np.array([  5,  13,  14,  22,  28,  30,  35,  36,  39,  44,  48,  51,  66,
        72,  79,  87,  89,  90,  91, 109, 118, 128, 140, 141, 143, 152,
       155, 161, 164, 166, 175, 177, 184, 192, 193, 195, 198, 202, 204,
       227, 230, 232, 235, 242, 243, 246, 253, 256, 262, 265, 270, 281,
       286, 294, 297, 311, 313, 325, 326, 345]))

    #part 5
    train_fractions.append(np.array([  1,   3,   4,   5,   7,   9,  10,  11,  12,  13,  14,  16,  18,
        20,  21,  22,  23,  24,  27,  28,  30,  33,  35,  36,  38,  39,
        40,  43,  44,  45,  46,  47,  48,  49,  51,  53,  55,  56,  57,
        59,  60,  61,  63,  64,  66,  67,  68,  70,  72,  74,  77,  78,
        79,  80,  83,  85,  87,  89,  90,  91,  92,  95,  96,  98, 100,
       101, 102, 104, 105, 109, 110, 111, 112, 115, 117, 118, 119, 123,
       124, 125, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141,
       143, 144, 145, 149, 150, 152, 155, 156, 157, 158, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177,
       179, 183, 184, 185, 187, 188, 190, 191, 192, 193, 195, 196, 197,
       198, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 216,
       217, 219, 221, 223, 224, 225, 227, 230, 231, 232, 235, 237, 238,
       239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253,
       256, 258, 259, 260, 262, 263, 264, 265, 269, 270, 272, 275, 278,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 310, 311,
       313, 315, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335,
       336, 337, 338, 342, 343, 345, 346, 347, 348, 349, 350, 357, 362,
       363, 364, 365, 367, 371, 373, 375, 377, 379]))
    validation_fractions.append(np.array([ 6,  15,  17,  25,  29,  34,  37,  42,  75,  76,  82,  84,  97,
       103, 106, 114, 120, 121, 122, 139, 153, 159, 160, 176, 181, 189,
       199, 215, 218, 228, 229, 247, 254, 257, 266, 273, 274, 280, 312,
       314, 316, 319, 329, 330, 339, 340, 341, 351, 352, 353, 354, 360,
       361, 366, 369, 370, 372, 374, 376, 378]))

    return train_fractions,validation_fractions
